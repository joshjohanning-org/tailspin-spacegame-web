name: .NET Web App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: restore
      working-directory: Tailspin.SpaceGame.Web
      run: dotnet restore

    - name: build
      working-directory: Tailspin.SpaceGame.Web
      run: dotnet build
      
    - name: test
      working-directory: Tailspin.SpaceGame.Web.Tests
      run: dotnet test --logger "junit;LogFilePath=results.xml"

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: '**/results.xml'

    - name: publish
      working-directory: Tailspin.SpaceGame.Web
      run: dotnet publish Tailspin.SpaceGame.Web.csproj -c Release -o ./spacegame

    - name: zip output
      working-directory: Tailspin.SpaceGame.Web/spacegame
      run: zip -r ${{ github.workspace }}/spacegame.zip ./*

    - name: upload-artifacts
      uses: actions/upload-artifact@v3
      with:
        name: spacegame
        path: 'spacegame.zip'
      
  dev:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    environment:
      name: dev
      url: ${{ steps.deploy.outputs.webapp-url }}
    steps:
    - name: download-artifacts
      uses: actions/download-artifact@v3
      with:
        name: spacegame
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: 'Webapp deploy'
      id: deploy
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ vars.APP_NAME }}
        package: spacegame.zip

  prod:
    runs-on: ubuntu-latest
    needs: [build, dev]
    if: github.event_name != 'pull_request'
    environment:
      name: prod
      url: ${{ steps.deploy.outputs.webapp-url }}
    steps:
    - name: download-artifacts
      uses: actions/download-artifact@v3
      with:
        name: spacegame
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: 'Webapp deploy'
      id: deploy
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ vars.APP_NAME }}
        package: spacegame.zip
